window.SIDEBAR_ITEMS = {"enum":[["BinaryOperationError","Errors that can result from a binary operation"],["IndexingError","Errors that can result from indexing"],["TypeCoercionError","Errors that can result from an implicit type coercion"]],"fn":[["duplicate_name_error",""],["error",""],["fancy_error",""],["name_conflict_error",""],["not_yet_implemented",""],["self_contract_type_error",""],["to_mem_error",""],["type_error",""]],"struct":[["AlreadyDefined","Error to be returned from APIs that should reject duplicate definitions"],["ConstEvalError","Error indicating constant evaluation failed."],["FatalError","Error to be returned when otherwise no meaningful information can be returned. Canâ€™t be created unless a diagnostic has been emitted, and thus a [`DiagnosticVoucher`] has been obtained. (See comment on [`TypeError`])"],["IncompleteItem","Error returned by `ModuleId::resolve_name` if the name is not found, and parsing of the module failed. In this case, emitting an error message about failure to resolve the name might be misleading, because the file may in fact contain an item with the given name, somewhere after the syntax error that caused parsing to fail."],["TypeError","Error indicating that a type is invalid."]]};